{"version":3,"file":"index.js","sources":["../../../node_modules/call-bind-apply-helpers/index.js"],"sourcesContent":["'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n"],"names":["bind","require$$0","$TypeError","require$$1","$call","require$$2","$actualApply","require$$3","callBindApplyHelpers","args","length"],"mappings":"8IAEA,IAAIA,EAAOC,EACPC,EAAaC,EAEbC,EAAQC,EACRC,EAAeC,EAGnBC,EAAiB,SAAuBC,GACvC,GAAIA,EAAKC,OAAS,GAAwB,mBAAZD,EAAK,GAClC,MAAM,IAAIP,EAAW,0BAEtB,OAAOI,EAAaN,EAAMI,EAAOK"}