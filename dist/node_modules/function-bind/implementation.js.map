{"version":3,"file":"implementation.js","sources":["../../../node_modules/function-bind/implementation.js"],"sourcesContent":["'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n"],"names":["ERROR_MESSAGE","toStr","Object","prototype","toString","max","Math","concatty","a","b","arr","i","length","j","slicy","arrLike","offset","joiny","joiner","str","implementation","that","target","this","apply","TypeError","bound","args","arguments","binder","result","boundLength","boundArgs","Function","Empty"],"mappings":"AAIA,IAAIA,EAAgB,kDAChBC,EAAQC,OAAOC,UAAUC,SACzBC,EAAMC,KAAKD,IAGXE,EAAW,SAAkBC,EAAGC,GAGhC,IAFA,IAAIC,EAAM,GAEDC,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,GAAK,EAC/BD,EAAIC,GAAKH,EAAEG,GAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAEG,OAAQC,GAAK,EAC/BH,EAAIG,EAAIL,EAAEI,QAAUH,EAAEI,GAG1B,OAAOH,GAGPI,EAAQ,SAAeC,EAASC,GAEhC,IADA,IAAIN,EAAM,GACDC,EAAIK,GAAU,EAAGH,EAAI,EAAGF,EAAII,EAAQH,OAAQD,GAAK,EAAGE,GAAK,EAC9DH,EAAIG,GAAKE,EAAQJ,GAErB,OAAOD,GAGPO,EAAQ,SAAUP,EAAKQ,GAEvB,IADA,IAAIC,EAAM,GACDR,EAAI,EAAGA,EAAID,EAAIE,OAAQD,GAAK,EACjCQ,GAAOT,EAAIC,GACPA,EAAI,EAAID,EAAIE,SACZO,GAAOD,GAGf,OAAOC,GAGXC,EAAiB,SAAcC,GAC3B,IAAIC,EAASC,KACb,GAAsB,mBAAXD,GApCA,sBAoCyBrB,EAAMuB,MAAMF,GAC5C,MAAM,IAAIG,UAAUzB,EAAgBsB,GAyBxC,IAvBA,IAEII,EAFAC,EAAOb,EAAMc,UAAW,GAGxBC,EAAS,WACT,GAAIN,gBAAgBG,EAAO,CACvB,IAAII,EAASR,EAAOE,MAChBD,KACAhB,EAASoB,EAAMC,YAEnB,OAAI1B,OAAO4B,KAAYA,EACZA,EAEJP,KAEX,OAAOD,EAAOE,MACVH,EACAd,EAASoB,EAAMC,aAKnBG,EAAc1B,EAAI,EAAGiB,EAAOV,OAASe,EAAKf,QAC1CoB,EAAY,GACPrB,EAAI,EAAGA,EAAIoB,EAAapB,IAC7BqB,EAAUrB,GAAK,IAAMA,EAKzB,GAFAe,EAAQO,SAAS,SAAU,oBAAsBhB,EAAMe,EAAW,KAAO,4CAAjEC,CAA8GJ,GAElHP,EAAOnB,UAAW,CAClB,IAAI+B,EAAQ,aACZA,EAAM/B,UAAYmB,EAAOnB,UACzBuB,EAAMvB,UAAY,IAAI+B,EACtBA,EAAM/B,UAAY,KAGtB,OAAOuB"}