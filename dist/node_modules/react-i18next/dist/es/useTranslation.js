import{useContext as e,useCallback as t,useState as n,useRef as r,useEffect as o}from"react";import{I18nContext as s,ReportNamespaces as i}from"./context.js";import{warnOnce as a,hasLoadedNamespace as l,loadLanguages as u,loadNamespaces as c,isString as f,isObject as p}from"./utils.js";import{getDefaults as d}from"./defaults.js";import{getI18n as m}from"./i18nInstance.js";const g=(e,t,n,r)=>e.getFixedT(t,n,r),N=(N,y={})=>{const{i18n:I}=y,{i18n:h,defaultNS:w}=e(s)||{},E=I||h||m();if(E&&!E.reportNamespaces&&(E.reportNamespaces=new i),!E){a(E,"NO_I18NEXT_INSTANCE","useTranslation: You will need to pass in an i18next instance by using initReactI18next");const e=(e,t)=>f(t)?t:p(t)&&f(t.defaultValue)?t.defaultValue:Array.isArray(e)?e[e.length-1]:e,t=[e,{},!1];return t.t=e,t.i18n={},t.ready=!1,t}E.options.react?.wait&&a(E,"DEPRECATED_OPTION","useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");const S={...d(),...E.options.react,...y},{useSuspense:T,keyPrefix:b}=S;let x=N||w||E.options?.defaultNS;x=f(x)?[x]:x||["translation"],E.reportNamespaces.addUsedNamespaces?.(x);const j=(E.isInitialized||E.initializedStoreOnce)&&x.every((e=>l(e,E,S))),A=((e,n,r,o)=>t(g(e,n,r,o),[e,n,r,o]))(E,y.lng||null,"fallback"===S.nsMode?x:x[0],b),O=()=>A,P=()=>g(E,y.lng||null,"fallback"===S.nsMode?x:x[0],b),[k,_]=n(O);let v=x.join();y.lng&&(v=`${y.lng}${v}`);const z=((e,t)=>{const n=r();return o((()=>{n.current=t?n.current:e}),[e,t]),n.current})(v),C=r(!0);o((()=>{const{bindI18n:e,bindI18nStore:t}=S;C.current=!0,j||T||(y.lng?u(E,y.lng,x,(()=>{C.current&&_(P)})):c(E,x,(()=>{C.current&&_(P)}))),j&&z&&z!==v&&C.current&&_(P);const n=()=>{C.current&&_(P)};return e&&E?.on(e,n),t&&E?.store.on(t,n),()=>{C.current=!1,E&&e&&e?.split(" ").forEach((e=>E.off(e,n))),t&&E&&t.split(" ").forEach((e=>E.store.off(e,n)))}}),[E,v]),o((()=>{C.current&&j&&_(O)}),[E,b,j]);const D=[k,E,j];if(D.t=k,D.i18n=E,D.ready=j,j)return D;if(!j&&!T)return D;throw new Promise((e=>{y.lng?u(E,y.lng,x,(()=>e())):c(E,x,(()=>e()))}))};export{N as useTranslation};
//# sourceMappingURL=useTranslation.js.map
