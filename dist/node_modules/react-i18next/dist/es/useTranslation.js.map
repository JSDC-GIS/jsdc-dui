{"version":3,"file":"useTranslation.js","sources":["../../../../../node_modules/react-i18next/dist/es/useTranslation.js"],"sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) warnOnce(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n && bindI18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};"],"names":["alwaysNewT","i18n","language","namespace","keyPrefix","getFixedT","useTranslation","ns","props","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","useContext","I18nContext","getI18n","reportNamespaces","ReportNamespaces","warnOnce","notReadyT","k","optsOrDefaultValue","isString","isObject","defaultValue","Array","isArray","length","retNotReady","t","ready","options","react","wait","i18nOptions","getDefaults","useSuspense","namespaces","addUsedNamespaces","isInitialized","initializedStoreOnce","every","n","hasLoadedNamespace","memoGetT","useCallback","useMemoizedT","lng","nsMode","getT","getNewT","setT","useState","joinedNS","join","previousJoinedNS","value","ignore","ref","useRef","useEffect","current","usePrevious","isMounted","bindI18n","bindI18nStore","loadLanguages","loadNamespaces","boundReset","on","store","split","forEach","e","off","ret","Promise","resolve"],"mappings":"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"}