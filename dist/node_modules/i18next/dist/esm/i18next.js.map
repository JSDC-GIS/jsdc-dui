{"version":3,"file":"i18next.js","sources":["../../../../../node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    if (resolved?.res === undefined) return false;\n    const isObject = shouldHandleAsObject(resolved.res);\n    if (opt.returnObjects === false && isObject) {\n      return false;\n    }\n    return true;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, keysFromSelector as keyFromSelector, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","super","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","PATH_KEY","Symbol","keysFromSelector","selector","opts","state","handler","proxy","revoke","Proxy","revocable","createProxy","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","isObject","returnObjects","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","static","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance","createInstance"],"mappings":"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"}