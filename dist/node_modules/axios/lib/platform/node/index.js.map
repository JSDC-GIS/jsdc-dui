{"version":3,"file":"index.js","sources":["../../../../../../node_modules/axios/lib/platform/node/index.js"],"sourcesContent":["import crypto from 'crypto';\nimport URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  const randomValues = new Uint32Array(size);\n  crypto.randomFillSync(randomValues);\n  for (let i = 0; i < size; i++) {\n    str += alphabet[randomValues[i] % length];\n  }\n\n  return str;\n}\n\n\nexport default {\n  isNode: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob: typeof Blob !== 'undefined' && Blob || null\n  },\n  ALPHABET,\n  generateString,\n  protocols: [ 'http', 'https', 'file', 'data' ]\n};\n"],"names":["ALPHA","ALPHABET","DIGIT","ALPHA_DIGIT","toUpperCase","platform","isNode","classes","URLSearchParams","FormData","Blob","generateString","size","alphabet","str","length","randomValues","Uint32Array","crypto","randomFillSync","i","protocols"],"mappings":"kIAIA,MAAMA,EAAQ,6BAIRC,EAAW,CACfC,MAHY,aAIZF,MAAAA,EACAG,YAAaH,EAAQA,EAAMI,cALf,cAqBd,IAAeC,EAAA,CACbC,QAAQ,EACRC,QAAS,CACPC,gBAAAA,EACAC,SAAAA,EACAC,KAAsB,oBAATA,MAAwBA,MAAQ,MAE/CT,SAAAA,EACAU,eArBqB,CAACC,EAAO,GAAIC,EAAWZ,EAASE,eACrD,IAAIW,EAAM,GACV,MAAMC,OAACA,GAAUF,EACXG,EAAe,IAAIC,YAAYL,GACrCM,EAAOC,eAAeH,GACtB,IAAK,IAAII,EAAI,EAAGA,EAAIR,EAAMQ,IACxBN,GAAOD,EAASG,EAAaI,GAAKL,GAGpC,OAAOD,GAaPO,UAAW,CAAE,OAAQ,QAAS,OAAQ"}