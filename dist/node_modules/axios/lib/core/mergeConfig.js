import e from"../utils.js";import n from"./AxiosHeaders.js";const t=e=>e instanceof n?{...e}:e;function i(n,i){i=i||{};const o={};function s(n,t,i,o){return e.isPlainObject(n)&&e.isPlainObject(t)?e.merge.call({caseless:o},n,t):e.isPlainObject(t)?e.merge({},t):e.isArray(t)?t.slice():t}function r(n,t,i,o){return e.isUndefined(t)?e.isUndefined(n)?void 0:s(void 0,n,0,o):s(n,t,0,o)}function a(n,t){if(!e.isUndefined(t))return s(void 0,t)}function d(n,t){return e.isUndefined(t)?e.isUndefined(n)?void 0:s(void 0,n):s(void 0,t)}function c(e,t,o){return o in i?s(e,t):o in n?s(void 0,e):void 0}const f={url:a,method:a,data:a,baseURL:d,transformRequest:d,transformResponse:d,paramsSerializer:d,timeout:d,timeoutMessage:d,withCredentials:d,withXSRFToken:d,adapter:d,responseType:d,xsrfCookieName:d,xsrfHeaderName:d,onUploadProgress:d,onDownloadProgress:d,decompress:d,maxContentLength:d,maxBodyLength:d,beforeRedirect:d,transport:d,httpAgent:d,httpsAgent:d,cancelToken:d,socketPath:d,responseEncoding:d,validateStatus:c,headers:(e,n,i)=>r(t(e),t(n),0,!0)};return e.forEach(Object.keys({...n,...i}),(function(t){const s=f[t]||r,a=s(n[t],i[t],t);e.isUndefined(a)&&s!==c||(o[t]=a)})),o}export{i as default};
//# sourceMappingURL=mergeConfig.js.map
