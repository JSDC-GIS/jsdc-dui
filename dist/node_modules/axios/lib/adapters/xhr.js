import e from"../utils.js";import t from"../core/settle.js";import o from"../defaults/transitional.js";import n from"../core/AxiosError.js";import s from"../cancel/CanceledError.js";import r from"../helpers/parseProtocol.js";import i from"../platform/index.js";import a from"../core/AxiosHeaders.js";import{progressEventReducer as l}from"../helpers/progressEventReducer.js";import u from"../helpers/resolveConfig.js";var d="undefined"!=typeof XMLHttpRequest&&function(d){return new Promise((function(p,c){const m=u(d);let f=m.data;const E=a.from(m.headers).normalize();let g,T,R,j,w,{responseType:x,onUploadProgress:h,onDownloadProgress:v}=m;function b(){j&&j(),w&&w(),m.cancelToken&&m.cancelToken.unsubscribe(g),m.signal&&m.signal.removeEventListener("abort",g)}let y=new XMLHttpRequest;function C(){if(!y)return;const e=a.from("getAllResponseHeaders"in y&&y.getAllResponseHeaders()),o={data:x&&"text"!==x&&"json"!==x?y.response:y.responseText,status:y.status,statusText:y.statusText,headers:e,config:d,request:y};t((function(e){p(e),b()}),(function(e){c(e),b()}),o),y=null}y.open(m.method.toUpperCase(),m.url,!0),y.timeout=m.timeout,"onloadend"in y?y.onloadend=C:y.onreadystatechange=function(){y&&4===y.readyState&&(0!==y.status||y.responseURL&&0===y.responseURL.indexOf("file:"))&&setTimeout(C)},y.onabort=function(){y&&(c(new n("Request aborted",n.ECONNABORTED,d,y)),y=null)},y.onerror=function(e){const t=e&&e.message?e.message:"Network Error",o=new n(t,n.ERR_NETWORK,d,y);o.event=e||null,c(o),y=null},y.ontimeout=function(){let e=m.timeout?"timeout of "+m.timeout+"ms exceeded":"timeout exceeded";const t=m.transitional||o;m.timeoutErrorMessage&&(e=m.timeoutErrorMessage),c(new n(e,t.clarifyTimeoutError?n.ETIMEDOUT:n.ECONNABORTED,d,y)),y=null},void 0===f&&E.setContentType(null),"setRequestHeader"in y&&e.forEach(E.toJSON(),(function(e,t){y.setRequestHeader(t,e)})),e.isUndefined(m.withCredentials)||(y.withCredentials=!!m.withCredentials),x&&"json"!==x&&(y.responseType=m.responseType),v&&([R,w]=l(v,!0),y.addEventListener("progress",R)),h&&y.upload&&([T,j]=l(h),y.upload.addEventListener("progress",T),y.upload.addEventListener("loadend",j)),(m.cancelToken||m.signal)&&(g=e=>{y&&(c(!e||e.type?new s(null,d,y):e),y.abort(),y=null)},m.cancelToken&&m.cancelToken.subscribe(g),m.signal&&(m.signal.aborted?g():m.signal.addEventListener("abort",g)));const L=r(m.url);L&&-1===i.protocols.indexOf(L)?c(new n("Unsupported protocol "+L+":",n.ERR_BAD_REQUEST,d)):y.send(f||null)}))};export{d as default};
//# sourceMappingURL=xhr.js.map
