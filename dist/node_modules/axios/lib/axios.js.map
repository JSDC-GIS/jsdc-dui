{"version":3,"file":"axios.js","sources":["../../../../node_modules/axios/lib/axios.js"],"sourcesContent":["'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n"],"names":["axios","createInstance","defaultConfig","context","Axios","instance","bind","prototype","request","utils","extend","allOwnKeys","create","instanceConfig","mergeConfig","defaults","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","all","promises","Promise","spread","isAxiosError","AxiosHeaders","formToJSON","thing","formDataToJSON","isHTMLForm","FormData","getAdapter","adapters","HttpStatusCode","default","axios$1"],"mappings":"unBA8CA,MAAMA,EAnBN,SAASC,EAAeC,GACtB,MAAMC,EAAU,IAAIC,EAAMF,GACpBG,EAAWC,EAAKF,EAAMG,UAAUC,QAASL,GAa/C,OAVAM,EAAMC,OAAOL,EAAUD,EAAMG,UAAWJ,EAAS,CAACQ,YAAY,IAG9DF,EAAMC,OAAOL,EAAUF,EAAS,KAAM,CAACQ,YAAY,IAGnDN,EAASO,OAAS,SAAgBC,GAChC,OAAOZ,EAAea,EAAYZ,EAAeW,KAG5CR,EAIKJ,CAAec,GAG7Bf,EAAMI,MAAQA,EAGdJ,EAAMgB,cAAgBA,EACtBhB,EAAMiB,YAAcA,EACpBjB,EAAMkB,SAAWA,EACjBlB,EAAMmB,QAAUA,EAChBnB,EAAMoB,WAAaA,EAGnBpB,EAAMqB,WAAaA,EAGnBrB,EAAMsB,OAAStB,EAAMgB,cAGrBhB,EAAMuB,IAAM,SAAaC,GACvB,OAAOC,QAAQF,IAAIC,IAGrBxB,EAAM0B,OAASA,EAGf1B,EAAM2B,aAAeA,EAGrB3B,EAAMc,YAAcA,EAEpBd,EAAM4B,aAAeA,EAErB5B,EAAM6B,WAAaC,GAASC,EAAetB,EAAMuB,WAAWF,GAAS,IAAIG,SAASH,GAASA,GAE3F9B,EAAMkC,WAAaC,EAASD,WAE5BlC,EAAMoC,eAAiBA,EAEvBpC,EAAMqC,QAAUrC,EAGhB,IAAesC,EAAAtC"}