{"version":3,"file":"formDataToStream.js","sources":["../../../../../node_modules/axios/lib/helpers/formDataToStream.js"],"sourcesContent":["import util from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\nimport platform from \"../platform/index.js\";\n\nconst BOUNDARY_ALPHABET = platform.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = typeof TextEncoder === 'function' ? new TextEncoder() : new util.TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + platform.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n"],"names":["BOUNDARY_ALPHABET","platform","ALPHABET","ALPHA_DIGIT","textEncoder","TextEncoder","util","CRLF_BYTES","encode","FormDataPart","constructor","name","value","escapeName","this","isStringValue","utils","isString","headers","String","replace","type","contentLength","byteLength","size","async","isTypedArray","readBlob","static","match","formDataToStream$1","form","headersHandler","options","tag","boundary","generateString","isFormData","TypeError","length","Error","boundaryBytes","footerBytes","parts","Array","from","entries","map","part","toFiniteNumber","computedHeaders","Number","isFinite","Readable"],"mappings":"kJAMA,MAAMA,EAAoBC,EAASC,SAASC,YAAc,KAEpDC,EAAqC,mBAAhBC,YAA6B,IAAIA,YAAgB,IAAIC,EAAKD,YAG/EE,EAAaH,EAAYI,OADlB,QAIb,MAAMC,EACJC,YAAYC,EAAMC,GAChB,MAAMC,WAACA,GAAcC,KAAKJ,YACpBK,EAAgBC,EAAMC,SAASL,GAErC,IAAIM,EAAU,yCAAyCL,EAAWF,OAC/DI,GAAiBH,EAAMD,KAAO,eAAeE,EAAWD,EAAMD,SAAW,SAGxEI,EACFH,EAAQR,EAAYI,OAAOW,OAAOP,GAAOQ,QAAQ,eAd1C,SAgBPF,GAAW,iBAAiBN,EAAMS,MAAQ,iCAG5CP,KAAKI,QAAUd,EAAYI,OAAOU,EAnBzB,QAqBTJ,KAAKQ,cAAgBP,EAAgBH,EAAMW,WAAaX,EAAMY,KAE9DV,KAAKU,KAAOV,KAAKI,QAAQK,WAAaT,KAAKQ,cArBtB,EAuBrBR,KAAKH,KAAOA,EACZG,KAAKF,MAAQA,EAGfa,qBACQX,KAAKI,QAEX,MAAMN,MAACA,GAASE,KAEbE,EAAMU,aAAad,SACdA,QAECe,EAASf,SAGZL,EAGRqB,kBAAkBjB,GACd,OAAOQ,OAAOR,GAAMS,QAAQ,YAAaS,IAAW,CAClD,KAAO,MACP,KAAO,MACP,IAAM,OACNA,OAqDR,IAAAC,EAjDyB,CAACC,EAAMC,EAAgBC,KAC9C,MAAMC,IACJA,EAAM,qBAAoBV,KAC1BA,EAAO,GAAEW,SACTA,EAAWD,EAAM,IAAMjC,EAASmC,eAAeZ,EAAMxB,IACnDiC,GAAW,GAEf,IAAIjB,EAAMqB,WAAWN,GACnB,MAAMO,UAAU,8BAGlB,GAAIH,EAASI,OAAS,GAAKJ,EAASI,OAAS,GAC3C,MAAMC,MAAM,0CAGd,MAAMC,EAAgBrC,EAAYI,OAAO,KAAO2B,EAnErC,QAoELO,EAActC,EAAYI,OAAO,KAAO2B,EAAP,UACvC,IAAIb,EAAgBoB,EAAYnB,WAEhC,MAAMoB,EAAQC,MAAMC,KAAKd,EAAKe,WAAWC,KAAI,EAAEpC,EAAMC,MACnD,MAAMoC,EAAO,IAAIvC,EAAaE,EAAMC,GAEpC,OADAU,GAAiB0B,EAAKxB,KACfwB,KAGT1B,GAAiBmB,EAAclB,WAAaoB,EAAMJ,OAElDjB,EAAgBN,EAAMiC,eAAe3B,GAErC,MAAM4B,EAAkB,CACtB,eAAgB,iCAAiCf,KASnD,OANIgB,OAAOC,SAAS9B,KAClB4B,EAAgB,kBAAoB5B,GAGtCU,GAAkBA,EAAekB,GAE1BG,EAASR,KAAK,kBACnB,IAAI,MAAMG,KAAQL,QACVF,QACCO,EAAKxC,eAGRkC,EANa"}