import e from"../platform/index.js";import r from"../utils.js";import o from"./isURLSameOrigin.js";import s from"./cookies.js";import t from"../core/buildFullPath.js";import a from"../core/mergeConfig.js";import i from"../core/AxiosHeaders.js";import n from"./buildURL.js";var m=m=>{const d=a({},m);let{data:f,withXSRFToken:l,xsrfHeaderName:p,xsrfCookieName:c,headers:u,auth:h}=d;if(d.headers=u=i.from(u),d.url=n(t(d.baseURL,d.url,d.allowAbsoluteUrls),m.params,m.paramsSerializer),h&&u.set("Authorization","Basic "+btoa((h.username||"")+":"+(h.password?unescape(encodeURIComponent(h.password)):""))),r.isFormData(f))if(e.hasStandardBrowserEnv||e.hasStandardBrowserWebWorkerEnv)u.setContentType(void 0);else if(r.isFunction(f.getHeaders)){const e=f.getHeaders(),r=["content-type","content-length"];Object.entries(e).forEach((([e,o])=>{r.includes(e.toLowerCase())&&u.set(e,o)}))}if(e.hasStandardBrowserEnv&&(l&&r.isFunction(l)&&(l=l(d)),l||!1!==l&&o(d.url))){const e=p&&c&&s.read(c);e&&u.set(p,e)}return d};export{m as default};
//# sourceMappingURL=resolveConfig.js.map
