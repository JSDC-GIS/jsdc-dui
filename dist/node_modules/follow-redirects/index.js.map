{"version":3,"file":"index.js","sources":["../../../node_modules/follow-redirects/index.js"],"sourcesContent":["var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Preventive platform detection\n// istanbul ignore next\n(function detectUnsupportedEnvironment() {\n  var looksLikeNode = typeof process !== \"undefined\";\n  var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n  var looksLikeV8 = isFunction(Error.captureStackTrace);\n  if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\n    console.warn(\"The follow-redirects package should be excluded from browser builds.\");\n  }\n}());\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL(\"\"));\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      // istanbul ignore else\n      if (request === self._currentRequest) {\n        // Report any write errors\n        // istanbul ignore if\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          // istanbul ignore else\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  // istanbul ignore else\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  // istanbul ignore next\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    // istanbul ignore else\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n"],"names":["looksLikeNode","looksLikeBrowser","looksLikeV8","url","require$$0","URL","http","require$$1","https","require$$2","Writable","require$$3","assert","require$$4","debug","require$$5","process","window","document","isFunction","Error","captureStackTrace","console","warn","useNativeURL","error","code","preservedUrlFields","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","this","_redirectable","emit","InvalidUrlError","createErrorType","TypeError","RedirectionError","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","destroy","prototype","noop","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","cause","_performRequest","wrap","protocols","exports","maxRedirects","maxBodyLength","nativeProtocols","keys","scheme","protocol","nativeProtocol","wrappedProtocol","defineProperties","request","value","input","callback","spreadUrlObject","isString","parseUrl","validateUrl","assign","host","hostname","equal","configurable","enumerable","writable","get","wrappedRequest","end","parsed","parse","test","href","urlObject","target","spread","key","startsWith","slice","port","Number","path","search","pathname","removeMatchingHeaders","regex","headers","lastValue","header","undefined","String","trim","message","baseClass","CustomError","properties","constructor","name","destroyRequest","removeListener","abort","_currentRequest","write","data","encoding","length","push","currentRequest","setHeader","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","searchPos","indexOf","substring","agents","agent","_currentUrl","format","_isRedirect","i","buffers","writeNext","buffer","finished","statusCode","trackRedirects","requestHeaders","location","followRedirects","responseUrl","redirects","beforeRedirect","Host","req","getHeader","relative","base","currentHostHeader","currentUrlParts","currentHost","currentUrl","redirectUrl","resolve","subdomain","domain","dot","endsWith","isSubdomain","responseDetails","requestDetails","followRedirectsModule"],"mappings":"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"}