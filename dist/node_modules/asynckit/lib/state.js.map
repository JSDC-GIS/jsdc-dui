{"version":3,"file":"state.js","sources":["../../../../node_modules/asynckit/lib/state.js"],"sourcesContent":["// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n"],"names":["state_1","list","sortMethod","isNamedList","Array","isArray","initState","index","keyedList","Object","keys","jobs","results","size","length","sort","a","b"],"mappings":"IACAA,EAWA,SAAeC,EAAMC,GAEnB,IAAIC,GAAeC,MAAMC,QAAQJ,GAC7BK,EACF,CACEC,MAAW,EACXC,UAAWL,GAAeD,EAAaO,OAAOC,KAAKT,GAAQ,KAC3DU,KAAW,GACXC,QAAWT,EAAc,GAAK,GAC9BU,KAAWV,EAAcM,OAAOC,KAAKT,GAAMa,OAASb,EAAKa,QAIzDZ,GAIFI,EAAUE,UAAUO,KAAKZ,EAAcD,EAAa,SAASc,EAAGC,GAE9D,OAAOf,EAAWD,EAAKe,GAAIf,EAAKgB,MAIpC,OAAOX"}