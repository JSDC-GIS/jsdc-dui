{"version":3,"file":"serialOrdered.js","sources":["../../../node_modules/asynckit/serialOrdered.js"],"sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n"],"names":["iterate","require$$0","initState","require$$1","terminator","require$$2","ascending","a","b","serialOrderedModule","exports","list","iterator","sortMethod","callback","state","iteratorHandler","error","result","index","length","results","bind","serialOrdered_1","descending"],"mappings":"qJAAA,IAAIA,EAAaC,EACbC,EAAaC,EACbC,EAAaC,EAyDjB,SAASC,EAAUC,EAAGC,GAEpB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,EAvDlCC,EAAcC,QAcd,SAAuBC,EAAMC,EAAUC,EAAYC,GAEjD,IAAIC,EAAQb,EAAUS,EAAME,GAuB5B,OArBAb,EAAQW,EAAMC,EAAUG,GAAO,SAASC,EAAgBC,EAAOC,GAEzDD,EAEFH,EAASG,EAAOC,IAIlBH,EAAMI,QAGFJ,EAAMI,OAASJ,EAAiB,WAAKJ,GAAMS,OAE7CpB,EAAQW,EAAMC,EAAUG,EAAOC,GAKjCF,EAAS,KAAMC,EAAMM,aAGhBjB,EAAWkB,KAAKP,EAAOD,IArCRS,EAAAb,QAAAJ,UAAIA,EACHiB,EAAAb,QAAAc,WA8DzB,SAAoBjB,EAAGC,GAErB,OAAQ,EAAIF,EAAUC,EAAGC"}